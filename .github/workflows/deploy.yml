name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */4 * * *" # Run every 4 hours
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install Node.js dependencies
        run: pnpm install

      - name: Build TypeScript
        run: pnpm build

      - name: Setup Crawl4AI
        run: uv run crawl4ai-setup

      - name: Restore hn_stories.json cache
        id: cache-stories
        uses: actions/cache@v4
        with:
          path: ./hn_stories.json
          key: ${{ runner.os }}-hn-stories-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-hn-stories-

      - name: Run Python script to generate data
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: uv run src/main.py

      - name: Generate HTML from data
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        run: pnpm start ./hn_stories.json ./output

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./output --project-name=hacker-news-cn
